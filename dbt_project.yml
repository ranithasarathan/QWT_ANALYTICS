
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_new_project'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

on-run-start: "alter session set timezone = 'Asia/Kolkata';"
on-run-end: "grant usage on database qwt_analytics_dev to role public; grant usage on schema auditing_dev to role public; grant select on table qwt_analytics_dev.auditing_dev.audit_qwt_models to role public;{{ dq_tools.store_test_results(results) }}"


models:

  dq_tools:
    # +database: DQ
    +schema: "{{env_var('DBT_AUDITSCHEMA','AUDITING_DEV')}}"

  pre-hook:
    - "insert into {{env_var('DBT_QWTDB', 'QWT_ANALYTICS_DEV')}}.{{env_var('DBT_AUDITSCHEMA', 'AUDITING_DEV')}}.audit_qwt_models(modelname,starttime,endtime,duration) values ('{{this}}',current_timestamp,null,null)"
  post-hook:
    - "update {{env_var('DBT_QWTDB', 'QWT_ANALYTICS_DEV')}}.{{env_var('DBT_AUDITSCHEMA', 'AUDITING_DEV')}}.audit_qwt_models set endtime = current_timestamp , duration = datediff('second', starttime, current_timestamp) where modelname = '{{this}}'"

vars:
  v_city: "Stockholm"
  "dbt_date:time_zone": "Asia/Kolkata"
  dbt_dq_tool_schema: AUDITING_DEV
  dq_tools_enable_store_test_results: True